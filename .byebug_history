c
@projectsForTags
n
array.uniq
n
array.flatten!
n
projects.notDrafted.map(&:project_type)
c
array.uniq!
n
projects.notDrafted.map(&:project_type)
c
project_types_as_array(Project)c
project_types_as_array(Project.all)
project_types_as_array(Project)
@projectsForTags
n
array.uniq
array
n
projects.notDrafted.map(&:project_type)
projects.notDrafted
projects
c
array
c
 project.project_type.include? params[:project_type].gsub('_',' ')
c
if project.project_type.include?(params[:project_type].gsub('_',' '))
c
project.project_type.include(params[:project_type].gsub('_',' '))
c
project.project_type.includes(params[:project_type].gsub('_',' '))
c
project.project_type.includes?(params[:project_type].gsub('_',' '))
c
n
params[:project_type].gsub('_',' ')
project.project_type
c
params[:project_type]
Project.where(project_type: params[:project_type].gsub('_',' '))
projectList
exit
array.flatten
array
c
n
c
n
c
self.completed
n
c
n
c
n
c
n
Post.first
@post
n
@post
n
@post
c
params[:project_type]
c
end
params[:project_type]
c
n
project
n
project
